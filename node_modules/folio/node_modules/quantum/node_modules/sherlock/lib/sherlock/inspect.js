var _ = require('./utils');

module.exports = function (obj) {
  var dobj = _.decycle(obj);
  return buildMeta(dobj);
};

function buildMeta (obj) {
  var meta = []
    , seed = -1;

  function iterate (depth, node, desc) {
    var type = _.getType(node);
    seed++;

    switch (type) {
      case 'object':
        meta.push({
            description: 'Object'
          , key: desc
          , depth: depth
          , index: seed
          , node: node
          , type: type
        });

        depth++;
        for (var key in node) {
          iterate(depth, node[key], key);
        }

        break;
      case 'string':
      case 'number':
      case 'boolean':
      case 'undefined':
      case 'null':
      case 'regexp':
        meta.push({
            description: node
          , key: desc
          , node: node
          , depth: depth
          , index: seed
          , type: type
        });

        break;
      case 'array':
        meta.push({
            description: 'Array'
          , key: desc
          , depth: depth
          , seed: seed
          , node: node
          , type: type
        });

        depth++;
        for (var i = 0, l = node.length; i < l; i++) {
          iterate(depth, node[i], i);
        }

        break;
    }
  };

  iterate(0, obj);
  return meta;
}
